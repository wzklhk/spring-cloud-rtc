server:
  port: 23333
  ssl:
    # 生成密钥
    # keytool -genkeypair -alias tomcat_https -keypass 123456 -keyalg RSA -keysize 1024 -validity 365 -keystore ./tomcat_https.keystore -storepass 123456
    enabled: true
    key-store: tomcat_https.keystore
    key-store-password: 123456
    key-password: 123456
    key-store-type: JKS

spring:
  # spring.application.name在bootstrap中定义
  #application:
  #  name: access-gateway  # 服务名称

  #main:
  #  allow-bean-definition-overriding: true
  #  web-application-type: reactive

  web:
    resources:
      static-locations: file:../vue-rtc/dist/

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # 开启从注册中心动态创建路由的功能
          lower-case-service-id: true  # 使用小写服务名，默认是大写
      #routes:
      #  - id: demo1
      #    uri: lb://demo1
      #    predicates:
      #      - Path=/demo1/**

      # 跨域访问
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedHeaders: "*"
            allowedOrigins: "*"
            allowedMethods: "*"
            max-age: 36000

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
